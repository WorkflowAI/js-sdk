{
  "name": "@workflowai/workflowai",
  "version": "1.5.0",
  "description": "WorkflowAI TS SDK",
  "author": "WorkflowAI",
  "homepage": "https://workflowai.com",
  "keywords": [
    "workflowai",
    "ai",
    "llm"
  ],
  "types": "./dist/types/index.d.ts",
  "main": "./dist/cjs/index.js",
  "module": "./dist/esm/index.js",
  "exports": {
    ".": {
      "types": "./dist/types/index.d.ts",
      "import": "./dist/esm/index.js",
      "require": "./dist/cjs/index.js"
    }
  },
  "files": [
    "dist"
  ],
  "engines": {
    "node": ">=18.13"
  },
  "dependencies": {
    "fetch-event-stream": "^0.1.5",
    "fetch-retry": "^6.0.0",
    "openapi-fetch": "^0.9.8",
    "zod": "^3.23.8",
    "zod-to-json-schema": "^3.23.1"
  },
  "devDependencies": {
    "@actions/core": "^1.10.1",
    "@jest/globals": "^29.4.3",
    "@trivago/prettier-plugin-sort-imports": "^4.3.0",
    "@types/jest": "^29.2.2",
    "@types/json-schema": "^7.0.15",
    "@types/minimist": "^1.2.5",
    "@types/node": "^18",
    "@typescript-eslint/eslint-plugin": "^7.8.0",
    "@typescript-eslint/parser": "^7.8.0",
    "dotenv": "^16.4.5",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-require-extensions": "^0.1.3",
    "eslint-plugin-unused-imports": "^3.2.0",
    "husky": "^9.1.6",
    "jest": "^29.3.1",
    "jest-fetch-mock": "^3.0.3",
    "lint-staged": "^15.2.10",
    "minimist": "^1.2.8",
    "nodemon": "^3.1.4",
    "openapi-typescript": "^6.7.6",
    "prettier": "^3.3.2",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.1",
    "ts-xor": "^1.3.0",
    "tsx": "^4.1.2",
    "typescript": "^5.5.2"
  },
  "scripts": {
    "-------- CODEGEN": "",
    "codegen:openapi": "openapi-typescript ${WORKFLOWAI_API_URL:-https://run.workflowai.dev}/openapi.json -o ./src/api/generated/openapi.ts",
    "codegen": "npm run codegen:openapi && npm run fix",
    "-------- LINTING": "",
    "prettier:check": "prettier --check src/**/*.ts src/*.ts src/**/*.js src/*.js *.md --no-error-on-unmatched-pattern",
    "prettier:fix": "prettier --write src/**/*.ts src/*.ts src/**/*.js src/*.js *.md --ignore-unknown --no-error-on-unmatched-pattern",
    "lint:check": "eslint --cache --ext .ts ./src",
    "lint:fix": "eslint --cache --fix --ext .ts ./src",
    "check": "npm run lint:check && npm run prettier:check",
    "fix": "npm run lint:fix && npm run prettier:fix",
    "test": "jest",
    "test:unit": "jest --projects configs/jest.default.config.ts",
    "test:e2e": "jest tests/e2e",
    "lint-staged": "lint-staged",
    "check-version": "tsx ./bin/check-version.ts",
    "-------- BUILD": "",
    "clean": "rm -rf dist/*",
    "build:types": "tsc -p ./configs/tsconfig.types.json",
    "build:cjs": "tsc -p ./configs/tsconfig.cjs.json && tsx ./configs/postcjs.ts",
    "build:esm": "tsc -p ./configs/tsconfig.esm.json && tsx ./configs/postesm.ts",
    "build:test": "tsc -p ./configs/tsconfig.test.json",
    "build": "npm run clean && npm run build:types && npm run build:cjs && npm run build:esm",
    "dry": "npm run build && npm pub --dry-run",
    "prepublishOnly": "npm run build"
  },
  "lint-staged": {
    "**/*.{js,jsx,ts,tsx}": [
      "eslint"
    ],
    "**/*.{json,md,yml,yaml,css,scss,html,js,jsx,ts,tsx}": [
      "prettier --check"
    ]
  }
}
