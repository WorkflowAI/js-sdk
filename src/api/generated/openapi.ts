/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v1/{tenant}/tasks/{task_id}/schemas/{task_schema_id}/run': {
    /** Run Task */
    post: operations['run_task_v1__tenant__tasks__task_id__schemas__task_schema_id__run_post'];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** FewShotConfiguration */
    FewShotConfiguration: {
      /**
       * Count
       * @description The number of few-shot examples to use for the task
       */
      count?: number | null;
      /**
       * Selection
       * @description The selection method to use for few-shot examples
       */
      selection?: ('latest' | 'manual') | string | null;
      /**
       * Examples
       * @description The few-shot examples used for the task. If provided, count and selection are ignored. If not provided, count and selection are used to select examples and the examples list will be set in the final group.
       */
      examples?: components['schemas']['FewShotExample'][] | null;
    };
    /** FewShotExample */
    FewShotExample: {
      /** Task Input */
      task_input: Record<string, never>;
      /** Task Output */
      task_output: Record<string, never>;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components['schemas']['ValidationError'][];
    };
    /** RunRequest */
    RunRequest: {
      /** Task Input */
      task_input: Record<string, never>;
      /** Version */
      version: number | string | components['schemas']['TaskGroupProperties'];
      /**
       * Id
       * @description An optional id. If not provided a uuid will be generated
       */
      id?: string;
      /**
       * Stream
       * @default false
       */
      stream?: boolean;
      /**
       * Use Cache
       * @default always
       *
       * always - When cache is available, cached result is returned and model is not called. Otherwise, model is called.
       * auto - When cache is available and temperature is 0, cached result is returned and model is not called. Otherwise, model is called.
       * never - Model is always called.
       *
       * @enum {string}
       */
      use_cache?: 'auto' | 'always' | 'never';
      /**
       * Metadata
       * @description Additional metadata to store with the task run.
       */
      metadata?: Record<string, never> | null;
      /**
       * Private Fields
       * @description Fields marked as private will not be saved, none by default.
       */
      private_fields?: ('task_input' | string)[] | null;
    };
    /**
     * TaskGroupProperties
     * @description Properties that described a way a task run was executed.
     * Although some keys are provided as an example, any key:value are accepted
     */
    TaskGroupProperties: {
      /**
       * Model
       * @description The LLM model used for the run
       */
      model?: string | null;
      /**
       * Provider
       * @description The LLM provider used for the run
       */
      provider?: string | null;
      /**
       * Temperature
       * @description The temperature for generation
       */
      temperature?: number | null;
      /**
       * Instructions
       * @description The instructions passed to the runner in order to generate the prompt.
       */
      instructions?: string | null;
      /**
       * Max Tokens
       * @description The maximum tokens to generate in the prompt
       */
      max_tokens?: number | null;
      /**
       * Runner Name
       * @description The name of the runner used
       */
      runner_name?: string | null;
      /**
       * Runner Version
       * @description The version of the runner used
       */
      runner_version?: string | null;
      /** @description Few shot configuration */
      few_shot?: components['schemas']['FewShotConfiguration'] | null;
      /**
       * Template Name
       * @description The template name used for the task
       */
      template_name?: string | null;
      [key: string]: unknown;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  /** Run Task */
  run_task_v1__tenant__tasks__task_id__schemas__task_schema_id__run_post: {
    parameters: {
      path: {
        tenant: string;
        task_id: string;
        task_schema_id: number;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['RunRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': {
            /** Id */
            id: string;
            /** Task Output */
            task_output: Record<string, never>;
            version: $defs['Version'];
            /** Duration Seconds */
            duration_seconds: number | null;
            /** Cost Usd */
            cost_usd: number | null;
            $defs: {
              /** FewShotConfiguration */
              FewShotConfiguration: {
                /**
                 * Count
                 * @description The number of few-shot examples to use for the task
                 */
                count?: number | null;
                /**
                 * Selection
                 * @description The selection method to use for few-shot examples
                 */
                selection?: ('latest' | 'manual') | string | null;
                /**
                 * Examples
                 * @description The few-shot examples used for the task. If provided, count and selection are ignored. If not provided, count and selection are used to select examples and the examples list will be set in the final group.
                 */
                examples?: $defs['FewShotExample'][] | null;
              };
              /** FewShotExample */
              FewShotExample: {
                /** Task Input */
                task_input: Record<string, never>;
                /** Task Output */
                task_output: Record<string, never>;
              };
              /**
               * TaskGroupProperties
               * @description Properties that described a way a task run was executed.
               * Although some keys are provided as an example, any key:value are accepted
               */
              TaskGroupProperties: {
                /**
                 * Model
                 * @description The LLM model used for the run
                 */
                model?: string | null;
                /**
                 * Provider
                 * @description The LLM provider used for the run
                 */
                provider?: string | null;
                /**
                 * Temperature
                 * @description The temperature for generation
                 */
                temperature?: number | null;
                /**
                 * Instructions
                 * @description The instructions passed to the runner in order to generate the prompt.
                 */
                instructions?: string | null;
                /**
                 * Max Tokens
                 * @description The maximum tokens to generate in the prompt
                 */
                max_tokens?: number | null;
                /**
                 * Runner Name
                 * @description The name of the runner used
                 */
                runner_name?: string | null;
                /**
                 * Runner Version
                 * @description The version of the runner used
                 */
                runner_version?: string | null;
                /** @description Few shot configuration */
                few_shot?: $defs['FewShotConfiguration'] | null;
                /**
                 * Template Name
                 * @description The template name used for the task
                 */
                template_name?: string | null;
                [key: string]: unknown;
              };
              /** Version */
              Version: {
                properties: $defs['TaskGroupProperties'];
              };
            };
          };
          'text/event-stream': {
            $defs: {
              /** FewShotConfiguration */
              FewShotConfiguration: {
                /**
                 * Count
                 * @description The number of few-shot examples to use for the task
                 */
                count?: number | null;
                /**
                 * Selection
                 * @description The selection method to use for few-shot examples
                 */
                selection?: ('latest' | 'manual') | string | null;
                /**
                 * Examples
                 * @description The few-shot examples used for the task. If provided, count and selection are ignored. If not provided, count and selection are used to select examples and the examples list will be set in the final group.
                 */
                examples?: $defs['FewShotExample'][] | null;
              };
              /** FewShotExample */
              FewShotExample: {
                /** Task Input */
                task_input: Record<string, never>;
                /** Task Output */
                task_output: Record<string, never>;
              };
              /** RunResponse */
              RunResponse: {
                /** Id */
                id: string;
                /** Task Output */
                task_output: Record<string, never>;
                version: $defs['Version'];
                /** Duration Seconds */
                duration_seconds: number | null;
                /** Cost Usd */
                cost_usd: number | null;
              };
              /**
               * RunResponseStreamChunk
               * @description A streamed chunk for a run request. The final chunk will be a RunResponse object.
               */
              RunResponseStreamChunk: {
                /** Id */
                id: string;
                /** Task Output */
                task_output: Record<string, never>;
              };
              /**
               * TaskGroupProperties
               * @description Properties that described a way a task run was executed.
               * Although some keys are provided as an example, any key:value are accepted
               */
              TaskGroupProperties: {
                /**
                 * Model
                 * @description The LLM model used for the run
                 */
                model?: string | null;
                /**
                 * Provider
                 * @description The LLM provider used for the run
                 */
                provider?: string | null;
                /**
                 * Temperature
                 * @description The temperature for generation
                 */
                temperature?: number | null;
                /**
                 * Instructions
                 * @description The instructions passed to the runner in order to generate the prompt.
                 */
                instructions?: string | null;
                /**
                 * Max Tokens
                 * @description The maximum tokens to generate in the prompt
                 */
                max_tokens?: number | null;
                /**
                 * Runner Name
                 * @description The name of the runner used
                 */
                runner_name?: string | null;
                /**
                 * Runner Version
                 * @description The version of the runner used
                 */
                runner_version?: string | null;
                /** @description Few shot configuration */
                few_shot?: $defs['FewShotConfiguration'] | null;
                /**
                 * Template Name
                 * @description The template name used for the task
                 */
                template_name?: string | null;
                [key: string]: unknown;
              };
              /** Version */
              Version: {
                properties: $defs['TaskGroupProperties'];
              };
            };
          } & ($defs['RunResponseStreamChunk'] | $defs['RunResponse']);
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
}
